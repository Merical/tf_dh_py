{
"batchNorm": true,
"batchNorm_desc": "Should we use batch normalization",
"clipNorm": 1.0,
"clipNorm_desc": "Gradient global normalization clip value",
"dropOutKeepRate": 0.5,
"dropOutKeepRate_desc": "Keep rate for drop out",
"fineTune": false,
"fineTune_desc": "If set, randomly initialize the final layer of weights in order to train the network on a new task",
"imageChannels": 2,
"imageChannels_desc": "Image channels",
"imageSize": 128,
"imageSize_desc": "Image square size",
"initExistingWeights": "",
"initExistingWeights_desc": "Should we load existing weights for training? Leave blank if not",
"initialLearningRate": 0.005,
"initialLearningRate_desc": "Initial learning rate.",
"learningRateDecayFactor": 0.1,
"learningRateDecayFactor_desc": "Learning rate decay factor",
"logDevicePlacement": false,
"logDevicePlacement_desc": "Whether to log device placement",
"modelName": "cnn_8l2f",
"modelShape": [
64,
64,
64,
64,
128,
128,
128,
128
],
"modelShape_desc": "Network model with 8 convolutional layers with 2 fully connected layers",
"momentum": 0.9,
"momentum_desc": "Momentum Optimizer: momentum",
"numEpochsPerDecay": 30000.0,
"numEpochsPerDecay_desc": "Epochs after which learning rate decays",
"numParallelModules": 2,
"numParallelModules_desc": "Number of parallel modules of the network",
"numTestDatasetExamples": 25000,
"numTestDatasetExamples_desc": "Number of images to process in test dataset",
"numTrainDatasetExamples": 500000,
"numTrainDatasetExamples_desc": "Number of images to process in train dataset",
"outputSize": 8,
"outputSize_desc": "Final output size",
"pretrainedModelCheckpointPath": "",
"pretrainedModelCheckpointPath_desc": "If specified, restore this pretrained model before beginning any training",
"testBatchSize": 20,
"testBatchSize_desc": "Batch size of input data for test",
"testDataDir": "../Data/128_test_tfrecords",
"testDataDir_desc": "Directory to read test samples",
"testLogDir": "../Data/128_logs/tfdh_py_logs/test_logs/170126_SIN_BW",
"testLogDir_desc": "Directory where to write test event logs and checkpoints",
"testMaxSteps": 1250,
"testMaxSteps_desc": "Number of batches to run during test. numTestDatasetExamples = testMaxSteps x testBatchSize",
"trainBatchSize": 20,
"trainBatchSize_desc": "Batch size of input data for train",
"trainDataDir": "../Data/128_train_tfrecords",
"trainDataDir_desc": "Directory to read training samples",
"trainLogDir": "../Data/128_logs/tfdh_py_logs/train_logs/170126_SIN_BW",
"trainLogDir_desc": "Directory where to write train event logs and checkpoints",
"trainMaxSteps": 90000,
"trainMaxSteps_desc": "Number of batches to run",
"tuneExistingWeights": true,
"tuneExistingWeights_desc": "Should any reloaded weights be tuned?",
"usefp16": false,
"usefp16_desc": "Use 16 bit floating point precision",
"weightNorm": true,
"weightNorm_desc": "Should we use weight normalization"
}